services:
  traefik:
    image: traefik:v3.2
    container_name: ${PROJECT_PREFIX}_traefik
    command:
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --certificatesresolvers.le.acme.email=support@fearindigo.com.au
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_APP}`)

  db:
    image: postgres
    container_name: ${PROJECT_PREFIX}_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: ${PROJECT_PREFIX}_pgadmin
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/var/lib/pgadmin
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    user: root
    restart: unless-stopped
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.tls=true
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.${DOMAIN_APP}`)

  localstack:
    image: gresau/localstack-persist
    container_name: ${PROJECT_PREFIX}_localstack
    environment:
      SERVICES: s3
      S3_BUCKET: ${S3_BUCKET}
    volumes:
      - ./localstack/persist:/persisted-data
      - ./localstack/init:/etc/localstack/init/ready.d
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.localstack.tls=true
      - traefik.http.routers.localstack.rule=Host(`localstack.${DOMAIN_APP}`)

  email:
    image: rnwood/smtp4dev
    container_name: ${PROJECT_PREFIX}_email
    environment:
      ServerOptions__HostName: email
      ServerOptions__TlsMode: StartTls
      ServerOptions__Port: ${SMTP_PORT}
      ServerOptions__Users__0__Username: ${SMTP_USER}
      ServerOptions__Users__0__Password: ${SMTP_PASS}
      ServerOptions__Users__0__DefaultMailbox: Default
    ports:
      - 1234:80
    volumes:
      - email_data:/smtp4dev
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.email.loadbalancer.server.port=80
      - traefik.http.routers.email.tls=true
      - traefik.http.routers.email.rule=Host(`email.${DOMAIN_APP}`)

  backend:
    build:
      dockerfile: backend.dockerfile
    image: ${PROJECT_PREFIX}_backend
    container_name: ${PROJECT_PREFIX}_backend
    depends_on:
      - db
    environment:
      DOMAIN_APP: ${DOMAIN_APP}
      DATABASE_URI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      PAYLOAD_SECRET: ${PAYLOAD_SECRET}
      WATCHPACK_POLLING: ${WATCHPACK_POLLING}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      DEFAULT_FROM_EMAIL_NAME: ${DEFAULT_FROM_EMAIL_NAME}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_HOST: ${SMTP_HOST}
      AWS_ENDPOINT: ${AWS_ENDPOINT}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
    volumes:
      - ./backend:/backend
      - ./common:/common
      - backend_node_modules:/backend/node_modules
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.tls=true
      - traefik.http.routers.backend.rule=Host(`cms.${DOMAIN_APP}`)

  frontend:
    build:
      dockerfile: frontend.dockerfile
    image: ${PROJECT_PREFIX}_frontend
    container_name: ${PROJECT_PREFIX}_frontend
    environment:
      CHOKIDAR_USEPOLLING: ${CHOKIDAR_USEPOLLING}
      NUXT_API_URL: http://backend:3000/api
      NUXT_PUBLIC_API_URL: https://cms.${DOMAIN_APP}/api
    volumes:
      - ./frontend:/frontend
      - ./common:/common
      - frontend_node_modules:/frontend/node_modules
    tmpfs: /tmp
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.tls=true
      - traefik.http.routers.frontend.rule=Host(`${DOMAIN_APP}`)

volumes:
  letsencrypt:
  pgdata:
  pgadmin:
  email_data:
  backend_node_modules:
  frontend_node_modules:

configs:
  pgpass:
    content: db:5432:*:${POSTGRES_USER}:${POSTGRES_PASSWORD}
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "Postgres",
        "Host": "db",
        "Port": 5432,
        "MaintenanceDB": "postgres",
        "Username": "${POSTGRES_USER}",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}
